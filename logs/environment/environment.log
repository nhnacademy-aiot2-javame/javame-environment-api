2025-05-08 16:00:24 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:00:24 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:00:24 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 438ms
2025-05-08 16:00:54 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:00:54 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:00:55 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 249ms
2025-05-08 16:01:25 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:01:25 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:01:25 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 258ms
2025-05-08 16:01:47 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-08 16:01:55 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:01:55 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:01:55 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 255ms
2025-05-08 16:02:25 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:02:25 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:02:25 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 257ms
2025-05-08 16:02:55 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:02:55 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:02:56 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 254ms
2025-05-08 16:03:26 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:03:26 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:03:26 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 251ms
2025-05-08 16:03:56 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:03:56 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:03:56 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 267ms
2025-05-08 16:04:26 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:04:26 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:04:26 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 258ms
2025-05-08 16:04:56 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:04:56 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:04:57 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 246ms
2025-05-08 16:05:27 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:05:27 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:05:27 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 255ms
2025-05-08 16:05:57 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:05:57 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:05:57 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 254ms
2025-05-08 16:06:27 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:06:27 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:06:27 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 249ms
2025-05-08 16:06:47 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-08 16:06:57 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:06:57 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:06:58 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 253ms
2025-05-08 16:07:28 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:07:28 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:07:28 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 281ms
2025-05-08 16:07:58 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:07:58 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:07:58 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 266ms
2025-05-08 16:08:28 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:08:28 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:08:29 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 253ms
2025-05-08 16:08:59 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:08:59 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:08:59 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 253ms
2025-05-08 16:09:29 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:09:29 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:09:29 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 257ms
2025-05-08 16:09:59 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:09:59 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:09:59 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 255ms
2025-05-08 16:10:29 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:10:29 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:10:30 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 418ms
2025-05-08 16:11:00 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:11:00 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:11:00 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 264ms
2025-05-08 16:11:30 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:11:30 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:11:30 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 266ms
2025-05-08 16:11:47 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-08 16:12:00 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:12:00 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:12:01 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 257ms
2025-05-08 16:12:31 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:12:31 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:12:31 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 258ms
2025-05-08 16:13:01 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:13:01 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:13:01 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 259ms
2025-05-08 16:13:31 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:13:31 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:13:31 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 256ms
2025-05-08 16:14:01 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:14:01 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:14:02 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 256ms
2025-05-08 16:14:32 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:14:32 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:14:32 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 260ms
2025-05-08 16:15:02 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:15:02 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:15:02 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 245ms
2025-05-08 16:15:32 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:15:32 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:15:32 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 253ms
2025-05-08 16:16:02 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:16:02 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:16:03 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 258ms
2025-05-08 16:16:33 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:16:33 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:16:33 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 254ms
2025-05-08 16:16:47 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-08 16:17:03 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:17:03 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:17:03 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 241ms
2025-05-08 16:17:33 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:17:33 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:17:33 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 266ms
2025-05-08 16:18:03 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:18:03 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:18:04 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 258ms
2025-05-08 16:18:34 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:18:34 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:18:34 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 253ms
2025-05-08 16:19:04 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:19:04 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:19:04 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 257ms
2025-05-08 16:19:34 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:19:34 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:19:34 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 254ms
2025-05-08 16:20:04 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:20:04 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:20:05 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 436ms
2025-05-08 16:20:35 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:20:35 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:20:35 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 279ms
2025-05-08 16:21:05 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:21:05 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:21:05 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 279ms
2025-05-08 16:21:35 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:21:35 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:21:36 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 272ms
2025-05-08 16:21:47 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-08 16:22:06 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:22:06 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:22:06 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 384ms
2025-05-08 16:22:36 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:22:36 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:22:36 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 278ms
2025-05-08 16:23:06 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:23:06 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:23:07 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 274ms
2025-05-08 16:23:37 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:23:37 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:23:37 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 282ms
2025-05-08 16:24:07 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:24:07 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:24:07 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 277ms
2025-05-08 16:24:37 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:24:37 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:24:37 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 294ms
2025-05-08 16:25:07 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:25:07 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:25:08 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 274ms
2025-05-08 16:25:38 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:25:38 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:25:38 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 290ms
2025-05-08 16:26:08 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:26:08 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:26:08 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 274ms
2025-05-08 16:26:38 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:26:38 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:26:39 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 278ms
2025-05-08 16:26:47 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-08 16:27:09 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:27:09 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:27:09 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 284ms
2025-05-08 16:27:39 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:27:39 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:27:39 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 282ms
2025-05-08 16:28:09 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:28:09 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:28:09 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 277ms
2025-05-08 16:28:39 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:28:39 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:28:40 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 289ms
2025-05-08 16:29:10 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:29:10 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:29:10 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 291ms
2025-05-08 16:29:40 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:29:40 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:29:40 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 288ms
2025-05-08 16:30:10 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:30:10 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:30:11 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 444ms
2025-05-08 16:30:41 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:30:41 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:30:41 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 285ms
2025-05-08 16:31:11 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:31:11 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:31:11 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 287ms
2025-05-08 16:31:41 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:31:41 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:31:42 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 279ms
2025-05-08 16:31:47 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-08 16:32:12 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:32:12 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:32:12 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 280ms
2025-05-08 16:32:42 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:32:42 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:32:42 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 284ms
2025-05-08 16:33:12 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:33:12 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:33:12 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 282ms
2025-05-08 16:33:42 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:33:42 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:33:43 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 281ms
2025-05-08 16:34:13 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:34:13 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:34:13 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 283ms
2025-05-08 16:34:43 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:34:43 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:34:43 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 282ms
2025-05-08 16:35:13 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:35:13 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:35:14 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 284ms
2025-05-08 16:35:44 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:35:44 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:35:44 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 281ms
2025-05-08 16:36:14 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:36:14 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:36:14 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 280ms
2025-05-08 16:36:44 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:36:44 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:36:44 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 280ms
2025-05-08 16:36:47 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-08 16:37:14 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:37:14 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:37:15 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 284ms
2025-05-08 16:37:45 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:37:45 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:37:45 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 280ms
2025-05-08 16:38:15 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:38:15 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:38:15 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 283ms
2025-05-08 16:38:45 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:38:45 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:38:46 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 283ms
2025-05-08 16:39:16 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:39:16 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:39:16 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 281ms
2025-05-08 16:39:46 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:39:46 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:39:46 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 368ms
2025-05-08 16:40:16 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:40:16 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:40:17 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 435ms
2025-05-08 16:40:47 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:40:47 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:40:47 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 255ms
2025-05-08 16:41:17 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:41:17 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:41:17 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 343ms
2025-05-08 16:41:47 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-08 16:41:47 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:41:47 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:41:48 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 309ms
2025-05-08 16:42:18 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:42:18 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:42:18 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 288ms
2025-05-08 16:42:48 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:42:48 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:42:48 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 256ms
2025-05-08 16:43:18 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:43:18 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:43:18 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 296ms
2025-05-08 16:43:48 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:43:48 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:43:49 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 255ms
2025-05-08 16:44:19 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:44:19 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:44:19 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 256ms
2025-05-08 16:44:49 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:44:49 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:44:49 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 255ms
2025-05-08 16:45:19 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:45:19 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:45:19 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 257ms
2025-05-08 16:45:49 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:45:49 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:45:50 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 286ms
2025-05-08 16:46:20 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:46:20 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:46:20 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 255ms
2025-05-08 16:46:47 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-08 16:46:50 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:46:50 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:46:50 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 317ms
2025-05-08 16:47:20 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:47:20 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:47:21 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 253ms
2025-05-08 16:47:51 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:47:51 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:47:51 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 260ms
2025-05-08 16:48:21 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:48:21 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:48:21 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 263ms
2025-05-08 16:48:51 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:48:51 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:48:51 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 254ms
2025-05-08 16:49:21 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:49:21 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:49:22 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 271ms
2025-05-08 16:49:52 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:49:52 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:49:52 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 255ms
2025-05-08 16:50:22 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData()
2025-05-08 16:50:22 [pool-6-thread-1] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [TimeSeries] Flux query = from(bucket: "data") |> range(start: -30m) |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "입구") |> filter(fn: (r) => r["place"] == "server_room") |> filter(fn: (r) => r["device_id"] == "24e124743d011875") |> filter(fn: (r) => r["building"] == "gyeongnam_campus") |> filter(fn: (r) => r["_field"] == "value") |> filter(fn: (r) => r["_measurement"] == "Leq") |> keep(columns: ["_time", "_field", "_value", "_measurement", "location", "location", "place", "device_id", "building", "_field", "_measurement"]) |> sort(columns: ["_time"])
2025-05-08 16:50:22 [pool-6-thread-1] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getTimeSeriesData() => 446ms
2025-05-08 16:50:34 [SpringApplicationShutdownHook] INFO  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry - Unregistering application ENVIRONMENT-API with eureka with status DOWN
2025-05-08 16:50:34 [SpringApplicationShutdownHook] INFO  com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1746690634409, current=DOWN, previous=UP]
2025-05-08 16:50:34 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_ENVIRONMENT-API/192.168.71.100:ENVIRONMENT-API:10273: registering service...
2025-05-08 16:50:34 [SpringApplicationShutdownHook] INFO  org.springframework.boot.web.embedded.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-08 16:50:34 [DiscoveryClient-InstanceInfoReplicator-%d] INFO  com.netflix.discovery.DiscoveryClient - DiscoveryClient_ENVIRONMENT-API/192.168.71.100:ENVIRONMENT-API:10273 - registration status: 204
