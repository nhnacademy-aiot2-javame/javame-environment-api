2025-05-28 13:01:51 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-28 13:06:51 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-28 13:11:51 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-28 13:13:01 [http-nio-10273-exec-7] DEBUG com.nhnacademy.environment.config.TraceIdFilter - TraceId [d1e1587c] created for request: /environment/javame/current
2025-05-28 13:13:01 [http-nio-10273-exec-7] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.controller.TimeSeriesDataController.getCurrentValue()
2025-05-28 13:13:01 [http-nio-10273-exec-7] INFO  com.nhnacademy.environment.timeseries.controller.TimeSeriesDataController - /current 요청 - company: javame, origin: server_data, location: server_resource_data, measurement: used_percent, field: null
2025-05-28 13:13:01 [http-nio-10273-exec-7] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getLatestTimeSeriesData()
2025-05-28 13:13:01 [http-nio-10273-exec-7] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [LatestData] Flux query = from(bucket: "data") |> range(start: -7d) |> filter(fn: (r) => r._measurement == "used_percent") |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "server_resource_data") |> filter(fn: (r) => r["companyDomain"] == "javame") |> sort(columns: ["_time"], desc: true) |> limit(n:1)
2025-05-28 13:13:02 [http-nio-10273-exec-7] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getLatestTimeSeriesData() => 753ms
2025-05-28 13:13:02 [http-nio-10273-exec-7] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.controller.TimeSeriesDataController.getCurrentValue() => 758ms
2025-05-28 13:13:02 [http-nio-10273-exec-4] DEBUG com.nhnacademy.environment.config.TraceIdFilter - TraceId [29e7e168] created for request: /environment/javame/current
2025-05-28 13:13:02 [http-nio-10273-exec-4] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.controller.TimeSeriesDataController.getCurrentValue()
2025-05-28 13:13:02 [http-nio-10273-exec-4] INFO  com.nhnacademy.environment.timeseries.controller.TimeSeriesDataController - /current 요청 - company: javame, origin: server_data, location: server_resource_data, measurement: used_percent, field: null
2025-05-28 13:13:02 [http-nio-10273-exec-4] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getLatestTimeSeriesData()
2025-05-28 13:13:02 [http-nio-10273-exec-4] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [LatestData] Flux query = from(bucket: "data") |> range(start: -7d) |> filter(fn: (r) => r._measurement == "used_percent") |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "server_resource_data") |> filter(fn: (r) => r["companyDomain"] == "javame") |> sort(columns: ["_time"], desc: true) |> limit(n:1)
2025-05-28 13:13:03 [http-nio-10273-exec-4] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getLatestTimeSeriesData() => 577ms
2025-05-28 13:13:03 [http-nio-10273-exec-4] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.controller.TimeSeriesDataController.getCurrentValue() => 578ms
2025-05-28 13:13:03 [http-nio-10273-exec-9] DEBUG com.nhnacademy.environment.config.TraceIdFilter - TraceId [5531ceda] created for request: /environment/javame/current
2025-05-28 13:13:03 [http-nio-10273-exec-9] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.controller.TimeSeriesDataController.getCurrentValue()
2025-05-28 13:13:03 [http-nio-10273-exec-9] INFO  com.nhnacademy.environment.timeseries.controller.TimeSeriesDataController - /current 요청 - company: javame, origin: server_data, location: power_meter, measurement: temperature_celsius, field: null
2025-05-28 13:13:03 [http-nio-10273-exec-9] INFO  com.nhnacademy.environment.config.TraceAspect - [ENTER] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getLatestTimeSeriesData()
2025-05-28 13:13:03 [http-nio-10273-exec-9] DEBUG com.nhnacademy.environment.timeseries.service.TimeSeriesDataService - [LatestData] Flux query = from(bucket: "data") |> range(start: -7d) |> filter(fn: (r) => r._measurement == "temperature_celsius") |> filter(fn: (r) => r["origin"] == "server_data") |> filter(fn: (r) => r["location"] == "power_meter") |> filter(fn: (r) => r["companyDomain"] == "javame") |> sort(columns: ["_time"], desc: true) |> limit(n:1)
2025-05-28 13:13:03 [http-nio-10273-exec-9] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.service.TimeSeriesDataService.getLatestTimeSeriesData() => 281ms
2025-05-28 13:13:03 [http-nio-10273-exec-9] INFO  com.nhnacademy.environment.config.TraceAspect - [EXIT] com.nhnacademy.environment.timeseries.controller.TimeSeriesDataController.getCurrentValue() => 281ms
2025-05-28 13:16:51 [AsyncResolver-bootstrap-executor-%d] INFO  com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
